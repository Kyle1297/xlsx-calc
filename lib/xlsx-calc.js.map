{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/RawValue.js","webpack:///./src/int_2_col_str.js","webpack:///./src/col_str_2_int.js","webpack:///./src/Range.js","webpack:///./src/getSanitizedSheetName.js","webpack:///./src/str_2_val.js","webpack:///./src/RefValue.js","webpack:///./src/errors.js","webpack:///./src/find_all_cells_with_formulas.js","webpack:///./src/index.js","webpack:///./src/exec_formula.js","webpack:///./src/expression_builder.js","webpack:///./src/Exp.js","webpack:///./src/LazyValue.js","webpack:///./src/UserFnExecutor.js","webpack:///./src/UserRawFnExecutor.js","webpack:///./src/formulas.js","webpack:///./src/utils.js","webpack:///./src/formulas-raw.js","webpack:///./src/Calculator.js"],"names":["root","factory","exports","module","define","amd","a","i","this","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","setValue","v","calc","modulo","dividend","columnName","guard","String","fromCharCode","col_str","colstr","replace","length","Math","pow","charCodeAt","col_str_2_int","int_2_col_str","getSanitizedSheetName","str_expression","formula","min_row","max_row","min_col","max_col","sheet","sheet_name","parseRange","matrix","row","push","j","cell_name","cell_full_name","formula_ref","status","exec_formula","cell","f","includes","Error","range_expression","indexOf","aux","split","wb","Sheets","arr","parseInt","str_max_row","range_full_expression","quotedMatch","match","RawValue","RefValue","LazyValue","Range","definedNames","getDefinedName","buffer","Workbook","Names","keys","values","forEach","Name","Ref","str_2_val","isNaN","trim","inner","substr","self","parseRef","row_num","resolved_ref","ref_cell","console","log","w","nil","div0","ref","num","na","error","data","ERROR_MESSAGE_TO_VALUE","getErrorValueByMessage","errorMessage","cells","find_all_cells_with_formulas","Calculator","mymodule","workbook","options","formulas","continue_after_error","log_error","calculator","set_fx","exec_fx","import_functions","import_raw_functions","xlsx_Fx","localizeFunctions","XLSX_CALC","expression_builder","xlsx_raw_Fx","functions","opts","formulajs","prefix","obj","override","my_assign","dest","source","JSON","parse","stringify","k","build_expression","update_cell_value","fn","args","apply","dic","newName","oldName","Exp","UserFnExecutor","UserRawFnExecutor","common_operations","root_exp","str_formula","exp_obj","was_string","fn_stack","exp","string","char","state","start","single_quote","stack","trim_buffer","special","special_raw","ini_parentheses","pop","add_operation","exp_id","last_arg","isEmpty","checkVariable","getCurrentCellIndex","exec","op","isFormula","splice","b","Array","isArray","result","e","id","errorValues","undefined","message","concat","Date","exec_minus","getTime","toLowerCase","user_function","map","utils","floor","abs","sqrt","return_index","range_lookup","val","max","arguments","arg","col","sum","min","rate_per_period","number_of_payments","present_value","future_value","type","q","counta","range","guess","guest","NPV","normsInv","array","getArrayOfNumbers","_mean","reduce","mean","dev","itm","avg","E","var_p","covariance_p","is_blank","needle","table","index","exactmatch","searchingFor","column_num","lookupValue","matchType","match_exactly_string","match_exactly_non_string","match_less_than_or_equal","match_greater_than_or_equal","parseNumber","parseFloat","consistentSizeRanges","matrixArray","getRowCount","getColCount","rowCount","colCount","product","_i","_ij","arrays","x","today","setHours","hours","minutes","seconds","date","getDate","day","getMonth","month","getFullYear","year","text","number","substring","cond","decimalPlaces","round","roundMeasure","inv_n","avg_a","avg_b","sa","sb","elementToSum","sumResult","slice","elt","toString","option","old_text","new_text","occurrence","RegExp","significance","ceil","someFormula","include","if_empty","arrayWidth","arrayHeight","includeWidth","includeHeight","getMatrixValueForFilter","bool","parseBool","addEmptyValuesToArray","indexValue","idx","average","mu","sigma","Infinity","requiredLength","requiredHeight","up","toUpperCase","cell_ref","rows","columns","height","width","ref_value","parsed_ref","end_range_col","expressions","variables","calcNames","var_name","variable","setVarOfExpression","vars","item","getRef","ref_name"],"mappings":"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","file":"xlsx-calc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","\"use strict\";\n\nmodule.exports = function RawValue(value) {\n    this.setValue = function(v) {\n        value = v;\n    };\n    this.calc = function() {\n        return value;\n    };\n};\n","\"use strict\";\n\nmodule.exports = function int_2_col_str(n) {\n    var dividend = n + 1;\n    var columnName = '';\n    var modulo;\n    var guard = 10;\n    while (dividend > 0 && guard--) {\n        modulo = (dividend - 1) % 26;\n        columnName = String.fromCharCode(modulo + 65) + columnName;\n        dividend = (dividend - modulo - 1) / 26;\n    }\n    return columnName;\n};","\"use strict\";\n\nmodule.exports = function col_str_2_int(col_str) {\n    var r = 0;\n    var colstr = col_str.replace(/[0-9]+$/, '');\n    for (var i = colstr.length; i--;) {\n        r += Math.pow(26, colstr.length - i - 1) * (colstr.charCodeAt(i) - 64);\n    }\n    return r - 1;\n};","\"use strict\";\n\nconst col_str_2_int = require('./col_str_2_int.js');\nconst int_2_col_str = require('./int_2_col_str.js');\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\n\nmodule.exports = function Range(str_expression, formula) {\n    this.name = 'Range';\n    this.calc = function() {\n        const { \n            min_row, \n            max_row, \n            min_col, \n            max_col, \n            sheet, \n            sheet_name \n        } = this.parseRange();\n\n        var matrix = [];\n        for (var i = min_row; i <= max_row; i++) {\n            var row = [];\n            matrix.push(row);\n            for (var j = min_col; j <= max_col; j++) {\n                var cell_name = int_2_col_str(j) + i;\n                var cell_full_name = sheet_name + '!' + cell_name;\n                var formula_ref = formula.formula_ref[cell_full_name];\n                if (formula_ref) {\n                    if (formula_ref.status === 'new') {\n                        formula.exec_formula(formula_ref);\n                    } else if (formula_ref.status === 'working') {\n                        if (formula_ref.cell.f.includes(formula.name)) {\n                            throw new Error('Circular ref');\n                        }\n                        formula.exec_formula(formula_ref);\n                    }\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(sheet[cell_name]);\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else if (sheet[cell_name]) {\n                    if (sheet[cell_name].t === 'e') {\n                        row.push(sheet[cell_name]);\n                    }\n                    else {\n                        row.push(sheet[cell_name].v);\n                    }\n                }\n                else {\n                    row.push(null);\n                }\n            }\n        }\n        return matrix;\n    };\n\n    this.parseRange = function() {\n        var range_expression, sheet_name, sheet;\n        if (str_expression.indexOf('!') != -1) {\n            var aux = str_expression.split('!');\n            sheet_name = getSanitizedSheetName(aux[0]);\n            range_expression = aux[1];\n        }\n        else {\n            sheet_name = formula.sheet_name;\n            range_expression = str_expression;\n        }\n        sheet = formula.wb.Sheets[sheet_name];\n        var arr = range_expression.split(':');\n        var min_row = parseInt(arr[0].replace(/^[A-Z]+/, ''), 10) || 0;\n        var str_max_row = arr[1].replace(/^[A-Z]+/, '');\n        var max_row;\n        if (str_max_row === '' && sheet['!ref']) {\n            str_max_row = sheet['!ref'].split(':')[1].replace(/^[A-Z]+/, '');\n        }\n        // the max is 1048576, but TLE\n        max_row = parseInt(str_max_row == '' ? '500000' : str_max_row, 10);\n        var min_col = col_str_2_int(arr[0]);\n        var max_col = col_str_2_int(arr[1]);\n\n        return {\n            sheet: sheet,\n            sheet_name: sheet_name,\n            range_expression: range_expression,\n            range_full_expression: sheet_name + '!' + range_expression,\n            min_row: min_row,\n            max_row: max_row,\n            min_col: min_col,\n            max_col: max_col,\n        };\n    };\n};\n","\"use strict\";\n\nmodule.exports = function getSanitizedSheetName(sheet_name) {\n    var quotedMatch = sheet_name.match(/^'(.*)'$/);\n    if (quotedMatch) {\n        return quotedMatch[1];\n    }\n    else {\n        return sheet_name;\n    }\n};\n","const RawValue = require('./RawValue.js');\nconst RefValue = require('./RefValue.js');\nconst LazyValue = require('./LazyValue.js');\nconst Range = require('./Range.js');\n\n// this is used to _cache_ range names so that it doesn't need to be queried\n// every time a range is used\nlet definedNames, wb;\nfunction getDefinedName(buffer, formula) {\n    if (!(formula.wb.Workbook && formula.wb.Workbook.Names)) {\n        return null;\n    }\n    if (wb !== formula.wb) {\n        wb = formula.wb;\n        definedNames = null;\n        return getDefinedName(buffer, formula);\n    }\n    if (definedNames) {\n        return definedNames[buffer];\n    }\n    const keys = Object.values(formula.wb.Workbook.Names);\n    if (keys.length === 0) {\n        return;\n    }\n    definedNames = {};\n    keys.forEach(({ Name, Ref }) => {\n        if (!Name.includes('.')) {\n            definedNames[Name] = Ref;\n        }\n    });\n\n    return getDefinedName(buffer, formula);\n}\n\nmodule.exports = function str_2_val(buffer, formula) {\n    if (!isNaN(buffer)) {\n        return new RawValue(+buffer);\n    }\n    if (buffer === 'TRUE') {\n        return new RawValue(1);\n    }\n    if (typeof buffer !== 'string') {\n        return buffer;\n    }\n\n    buffer = buffer.trim().replace(/\\$/g, '')\n\n    if (buffer.match(/^[A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+:[A-Z]+[0-9]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+:[A-Z]+$/)) {\n        return new Range(buffer, formula);\n    }\n    if (buffer.match(/^[A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/^[^!]+![A-Z]+[0-9]+$/)) {\n        return new RefValue(buffer, formula);\n    }\n    if (buffer.match(/%$/)) {\n        var inner = str_2_val(buffer.substr(0, buffer.length-1), formula)\n        return new LazyValue(() => inner.calc() / 100)\n    }\n    if (getDefinedName(buffer, formula)) {\n        return str_2_val(getDefinedName(buffer, formula), formula);\n    }\n    return buffer;\n};\n","\"use strict\";\n\nconst getSanitizedSheetName = require('./getSanitizedSheetName.js');\n\nmodule.exports = function RefValue(str_expression, formula) {\n    var self = this;\n    this.name = 'RefValue';\n    this.str_expression = str_expression;\n    this.formula = formula;\n\n    self.parseRef = function() {\n        var sheet, sheet_name, cell_name, cell_full_name;\n        if (str_expression.indexOf('!') != -1) {\n            var aux = str_expression.split('!');\n            sheet_name = getSanitizedSheetName(aux[0]);\n            sheet = formula.wb.Sheets[sheet_name];\n            cell_name = aux[1];\n        }\n        else {\n            sheet = formula.sheet;\n            sheet_name = formula.sheet_name;\n            cell_name = str_expression;\n        }\n        if (!sheet) {\n            throw Error(\"Sheet \" + sheet_name + \" not found.\");\n        }\n        cell_full_name = sheet_name + '!' + cell_name;\n        return {\n            sheet: sheet,\n            sheet_name: sheet_name,\n            cell_name: cell_name,\n            row_num: parseInt(cell_name.replace(/[^0-9]/g, '')),\n            cell_full_name: cell_full_name\n        };\n    };\n\n    this.calc = function() {\n        var resolved_ref = self.parseRef();\n        var sheet = resolved_ref.sheet;\n        var cell_name = resolved_ref.cell_name;\n        var cell_full_name = resolved_ref.cell_full_name;\n        var ref_cell = sheet[cell_name];\n        if (!ref_cell) {\n            return null;\n        }\n        var formula_ref = formula.formula_ref[cell_full_name];\n        if (formula_ref) {\n            if (formula_ref.status === 'new') {\n                formula.exec_formula(formula_ref);\n                if (ref_cell.t === 'e') {\n                    // console.log('ref is an error with new formula', cell_full_name, ref_cell.w);\n                    throw new Error(ref_cell.w);\n                }\n                return ref_cell.v;\n            }\n            else if (formula_ref.status === 'working') {\n                if (ref_cell.f.includes(formula.name)) {\n                    throw new Error('Circular ref');\n                }\n                formula.exec_formula(formula_ref);\n                return this.calc();\n            }\n            else if (formula_ref.status === 'done') {\n                if (ref_cell.t === 'e') {\n                    // console.log('ref is an error after formula eval', cell_full_name, ref_cell.w);\n                    throw new Error(ref_cell.w);\n                }\n                return ref_cell.v;\n            }\n        }\n        else {\n            if (ref_cell.t === 'e') {\n                console.log('ref is an error with no formula', cell_name);\n                throw new Error(ref_cell.w);\n            }\n            return ref_cell.v;\n        }\n    };\n};\n","const nil = new Error('#NULL!')\nconst div0 = new Error('#DIV/0!')\nconst value = new Error('#VALUE!')\nconst ref = new Error('#REF!')\nconst name = new Error('#NAME?')\nconst num = new Error('#NUM!')\nconst na = new Error('#N/A')\nconst error = new Error('#ERROR!')\nconst data = new Error('#GETTING_DATA')\nconst calc = new Error('#CALC!')\n\nconst ERROR_MESSAGE_TO_VALUE = {\n    '#NULL!': 0x00,\n    '#DIV/0!': 0x07,\n    '#VALUE!': 0x0F,\n    '#REF!': 0x17,\n    '#NAME?': 0x1D,\n    '#NUM!': 0x24,\n    '#N/A': 0x2A,\n    '#GETTING_DATA': 0x2B,\n    '#CALC!': 0x00, // todo: set the correct error code\n};\n\nfunction getErrorValueByMessage(errorMessage) {\n    return ERROR_MESSAGE_TO_VALUE[errorMessage]\n}\n\nmodule.exports = {\n    nil,\n    div0,\n    value,\n    ref,\n    name,\n    num,\n    na,\n    error,\n    data,\n    calc,\n    getErrorValueByMessage,\n}","\"use strict\";\n\nmodule.exports = function find_all_cells_with_formulas(wb, exec_formula) {\n    let formula_ref = {};\n    let cells = [];\n    for (let sheet_name in wb.Sheets) {\n        let sheet = wb.Sheets[sheet_name];\n        for (let cell_name in sheet) {\n            if (sheet[cell_name] && sheet[cell_name].f) {\n                let formula = formula_ref[sheet_name + '!' + cell_name] = {\n                    formula_ref: formula_ref,\n                    wb: wb,\n                    sheet: sheet,\n                    sheet_name: sheet_name,\n                    cell: sheet[cell_name],\n                    name: cell_name,\n                    status: 'new',\n                    exec_formula: exec_formula\n                };\n                cells.push(formula);\n            }\n        }\n    }\n    return cells;\n};\n","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst exec_formula = require('./exec_formula.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\nconst Calculator = require('./Calculator.js');\n\nvar mymodule = function(workbook, options) {\n    var formulas = find_all_cells_with_formulas(workbook, exec_formula);\n    for (var i = formulas.length - 1; i >= 0; i--) {\n      try {\n        exec_formula(formulas[i]);\n      } catch (error) {\n        if (!options || !options.continue_after_error) {\n          throw error\n        }\n        if (options.log_error) {\n          console.log('error executing formula', 'sheet', formulas[i].sheet_name, 'cell', formulas[i].name, error)\n        }\n      }\n    }\n};\n\nmymodule.calculator = function calculator(workbook) {\n    return new Calculator(workbook, exec_formula);\n};\n\nmymodule.set_fx = exec_formula.set_fx;\nmymodule.exec_fx = exec_formula.exec_fx;\nmymodule.col_str_2_int = col_str_2_int;\nmymodule.int_2_col_str = int_2_col_str;\nmymodule.import_functions = exec_formula.import_functions;\nmymodule.import_raw_functions = exec_formula.import_raw_functions;\nmymodule.xlsx_Fx = exec_formula.xlsx_Fx;\nmymodule.localizeFunctions = exec_formula.localizeFunctions;\n\nmymodule.XLSX_CALC = mymodule\n\nmodule.exports = mymodule;\n","\"use strict\";\n\nconst expression_builder = require('./expression_builder.js');\n\nlet xlsx_Fx = {};\nlet xlsx_raw_Fx = {};\n\nimport_functions(require('./formulas.js'));\nimport_raw_functions(require('./formulas-raw.js'));\n\nfunction import_raw_functions(functions, opts) {\n    for (var key in functions) {\n        xlsx_raw_Fx[key] = functions[key];\n    }\n}\n\nfunction import_functions(formulajs, opts) {\n    opts = opts || {};\n    var prefix = opts.prefix || '';\n    for (var key in formulajs) {\n        var obj = formulajs[key];\n        if (typeof(obj) === 'function') {\n            if (opts.override || !xlsx_Fx[prefix + key]) {\n                xlsx_Fx[prefix + key] = obj;\n            }\n            // else {\n            //     console.log(prefix + key, 'already exists.');\n            //     console.log('  to override:');\n            //     console.log('    XLSX_CALC.import_functions(yourlib, {override: true})');\n            // }\n        }\n        else if (typeof(obj) === 'object') {\n            import_functions(obj, my_assign(opts, { prefix: key + '.' }));\n        }\n    }\n}\n\nfunction my_assign(dest, source) {\n    var obj = JSON.parse(JSON.stringify(dest));\n    for (var k in source) {\n        obj[k] = source[k];\n    }\n    return obj;\n}\n\nfunction build_expression(formula) {\n    return expression_builder(formula, {xlsx_Fx: xlsx_Fx, xlsx_raw_Fx: xlsx_raw_Fx});\n}\n\nfunction exec_formula(formula) {\n    let root_exp = build_expression(formula);\n    root_exp.update_cell_value();\n}\n\nexec_formula.set_fx = function set_fx(name, fn) {\n    xlsx_Fx[name] = fn;\n};\n\nexec_formula.exec_fx = function exec_fx(name, args) {\n    return xlsx_Fx[name].apply(this, args);\n};\n\nexec_formula.localizeFunctions = function(dic) {\n    for (let newName in dic) {\n        let oldName = dic[newName];\n        if (xlsx_Fx[oldName]) {\n            xlsx_Fx[newName] = xlsx_Fx[oldName];\n        }\n        if (xlsx_raw_Fx[oldName]) {\n            xlsx_raw_Fx[newName] = xlsx_raw_Fx[oldName];\n        }\n    }\n};\n\nexec_formula.import_functions = import_functions;\nexec_formula.import_raw_functions = import_raw_functions;\nexec_formula.build_expression = build_expression;\nexec_formula.xlsx_Fx = xlsx_Fx;\nmodule.exports = exec_formula;\n","const Exp = require('./Exp.js');\nconst RawValue = require('./RawValue.js');\nconst UserFnExecutor = require('./UserFnExecutor.js');\nconst UserRawFnExecutor = require('./UserRawFnExecutor.js');\nconst common_operations = {\n    '*': 'multiply',\n    '+': 'plus',\n    '-': 'minus',\n    '/': 'divide',\n    '^': 'power',\n    '&': 'concat',\n    '<': 'lt',\n    '>': 'gt',\n    '=': 'eq'\n};\n\nmodule.exports = function expression_builder(formula, opts) {\n    formula.status = 'working';\n\n    var xlsx_Fx = opts.xlsx_Fx || {};\n    var xlsx_raw_Fx = opts.xlsx_raw_Fx || {};\n\n    var root_exp;\n    var str_formula = formula.cell.f;\n    if (str_formula[0] == '=') {\n        str_formula = str_formula.substr(1);\n    }\n    var exp_obj = root_exp = new Exp(formula);\n    var buffer = '',\n        was_string = false;\n    var fn_stack = [{\n        exp: exp_obj\n    }];\n\n    /**\n     * state pattern in functional way\n     */\n    function string(char) {\n        if (char === '\"') {\n            exp_obj.push(new RawValue(buffer));\n            was_string = true;\n            buffer = '';\n            state = start;\n        } else {\n            buffer += char;\n        }\n    }\n\n    function single_quote(char) {\n        if (char === \"'\") {\n            state = start;\n        }\n        buffer += char;\n    }\n\n    function ini_parentheses() {\n        var o, trim_buffer = buffer.trim(),\n            special = xlsx_Fx[trim_buffer];\n        var special_raw = xlsx_raw_Fx[trim_buffer];\n        if (special_raw) {\n            special = new UserRawFnExecutor(special_raw, formula);\n        }\n        else if (special) {\n            special = new UserFnExecutor(special, formula);\n        }\n        else if (trim_buffer) {\n            //Error: \"Worksheet 1\"!D145: Function INDEX not found\n            throw new Error('\"' + formula.sheet_name + '\"!' + formula.name + ': Function ' + buffer + ' not found');\n        }\n        o = new Exp(formula);\n        fn_stack.push({\n            exp: o,\n            special: special\n        });\n        exp_obj = o;\n        buffer = '';\n    }\n\n    function end_parentheses() {\n        var v, stack = fn_stack.pop();\n        exp_obj = stack.exp;\n        exp_obj.push(buffer);\n        v = exp_obj;\n        buffer = '';\n        exp_obj = fn_stack[fn_stack.length - 1].exp;\n        if (stack.special) {\n            stack.special.push(v);\n            exp_obj.push(stack.special);\n        }\n        else {\n            exp_obj.push(v);\n        }\n    }\n\n    function add_operation(char) {\n        if (!was_string) {\n            exp_obj.push(buffer);\n        }\n        was_string = false;\n        exp_obj.push(char);\n        buffer = '';\n    }\n\n    function start(char) {\n        if (char === '\"') {\n            state = string;\n            buffer = '';\n        } else if (char === \"'\") {\n            state = single_quote;\n            buffer = \"'\";\n        } else if (char === '(') {\n            ini_parentheses();\n        } else if (char === ')') {\n            end_parentheses();\n        } else if (common_operations[char]) {\n            add_operation(char);\n        } else if (char === ',' && fn_stack[fn_stack.length - 1].special) {\n            was_string = false;\n            fn_stack[fn_stack.length - 1].exp.push(buffer);\n            fn_stack[fn_stack.length - 1].special.push(fn_stack[fn_stack.length - 1].exp);\n            fn_stack[fn_stack.length - 1].exp = exp_obj = new Exp(formula);\n            buffer = '';\n        } else if (char !== ' ') {\n            buffer += char;\n        }\n    }\n    \n    var state = start;\n\n    for (var i = 0; i < str_formula.length; i++) {\n        state(str_formula[i]);\n    }\n    root_exp.push(buffer);\n    return root_exp;\n\n}","\"use strict\";\n\nconst RawValue = require('./RawValue.js');\nconst Range = require('./Range.js');\nconst str_2_val = require('./str_2_val.js');\n\nconst MS_PER_DAY = 24 * 60 * 60 * 1000;\n\nvar exp_id = 0;\n\nmodule.exports = function Exp(formula) {\n    var self = this;\n    self.id = ++exp_id;\n    self.args = [];\n    self.name = 'Expression';\n    self.update_cell_value = update_cell_value;\n    self.formula = formula;\n    \n    function update_cell_value() {\n        try {\n            if (Array.isArray(self.args) \n                    && self.args.length === 1\n                    && self.args[0] instanceof Range) {\n                throw Error('#VALUE!');\n            }\n            formula.cell.v = self.calc();\n            if (typeof(formula.cell.v) === 'string') {\n                formula.cell.t = 's';\n            }\n            else if (typeof(formula.cell.v) === 'number') {\n                formula.cell.t = 'n';\n            }\n        }\n        catch (e) {\n            var errorValues = {\n                '#NULL!': 0x00,\n                '#DIV/0!': 0x07,\n                '#VALUE!': 0x0F,\n                '#REF!': 0x17,\n                '#NAME?': 0x1D,\n                '#NUM!': 0x24,\n                '#N/A': 0x2A,\n                '#GETTING_DATA': 0x2B\n            };\n            if (errorValues[e.message] !== undefined) {\n                formula.cell.t = 'e';\n                formula.cell.w = e.message;\n                formula.cell.v = errorValues[e.message];\n            }\n            else {\n                throw e;\n            }\n        }\n        finally {\n            formula.status = 'done';\n        }\n    }\n    function isEmpty(value) {\n        return value === undefined || value === null || value === \"\";\n    }\n    \n    function checkVariable(obj) {\n        if (typeof obj.calc !== 'function') {\n            throw new Error('Undefined ' + obj);\n        }\n    }\n\n    function getCurrentCellIndex() {\n        return +self.formula.name.replace(/[^0-9]/g, '');\n    }\n    \n    function exec(op, args, fn, isFormula) {\n        for (var i = 0; i < args.length; i++) {\n            if (args[i] === op) {\n                try {\n                    if (i===0 && op==='+') {\n                        checkVariable(args[i + 1]);\n                        let r = args[i + 1].calc();\n                        args.splice(i, 2, new RawValue(r));\n                    } else {\n                        checkVariable(args[i - 1]);\n                        checkVariable(args[i + 1]);\n                        \n                        let a = args[i - 1].calc(isFormula);\n                        let b = args[i + 1].calc(isFormula);\n\n                        if (Array.isArray(a)) {\n                            if (!isFormula && a.length >= getCurrentCellIndex()) {\n                                a = a[getCurrentCellIndex() - 1][0];\n                            }\n                            else if (a.length === 1 && !Array.isArray(a[0])) {\n                                a = a[0];\n                            }\n                            else if (a.length === 1 && Array.isArray(a[0] && a[0].length === 1) && Array.isArray(a[0][0])) {\n                                a[0] = a[0][0];\n                            }\n                        }\n                        if (Array.isArray(b)) {\n                            if (!isFormula && b.length >= getCurrentCellIndex()) {\n                                b = b[getCurrentCellIndex() - 1][0];\n                            }\n                            else if (b.length === 1 && !Array.isArray(b[0])) {\n                                b = b[0];\n                            }\n                            else if (b.length === 1 && Array.isArray(b[0]) && b[0].length > 1 && Array.isArray(b[0][0])) {\n                                b = b[0];\n                            }\n                        }\n\n                        let result = [];\n                        if (Array.isArray(a) && Array.isArray(b)) {\n                            for (let i = 0; i < a.length; i++) {\n                                result.push([]);\n                                for (let j = 0; j < a[i].length; j++) {\n                                    result[i].push(fn(a[i][j], b[i][j]));\n                                }\n                            }\n                        }\n                        else if (Array.isArray(a)) {\n                            for (let i = 0; i < a.length; i++) {\n                                result.push([]);\n                                for (let j = 0; j < a[i].length; j++) {\n                                    result[i].push(fn(a[i][j], b));\n                                }\n                            }\n                        }\n                        else if (Array.isArray(b)) {\n                            for (let i = 0; i < b.length; i++) {\n                                result.push([]);\n                                for (let j = 0; j < b[i].length; j++) {\n                                    result[i].push(fn(a, b[i][j]));\n                                }\n                            }\n                        }\n                        else {\n                            result = fn(a, b);\n                        }\n                        args.splice(i - 1, 3, new RawValue(result));\n                        i--;\n                    }\n                }\n                catch (e) {\n                    // console.log('[Exp.js] - ' + 'Sheet ' + formula.sheet_name + ', Cell ' + formula.name + ': evaluating ' + formula.cell.f + '\\n' + e.message + \"\\n\");\n                    throw e\n                }\n            }\n        }\n    }\n\n    function exec_minus(args) {\n        for (var i = args.length; i--;) {\n            if (args[i] === '-') {\n                checkVariable(args[i + 1]);\n                var b = args[i + 1].calc();\n                if (i > 0 && typeof args[i - 1] !== 'string') {\n                    args.splice(i, 1, '+');\n                    if (b instanceof Date) {\n                        b = Date.parse(b);\n                        checkVariable(args[i - 1]);\n                        var a = args[i - 1].calc();\n                        if (a instanceof Date) {\n                            a = Date.parse(a) / MS_PER_DAY;\n                            b = b / MS_PER_DAY;\n                            args.splice(i - 1, 1, new RawValue(a));\n                        }\n                    }\n                    args.splice(i + 1, 1, new RawValue(-b));\n                }\n                else {\n                    if (typeof b === 'string') {\n                        throw new Error('#VALUE!');\n                    }\n                    args.splice(i, 2, new RawValue(-b));\n                }\n            }\n        }\n    }\n\n    self.calc = function(isFormula = false) {\n        let args = self.args.concat();\n        exec('^', args, function(a, b) {\n            return Math.pow(+a, +b);\n        }, isFormula);\n        exec_minus(args);\n        exec('/', args, function(a, b) {\n            if (b == 0) {\n                throw Error('#DIV/0!');\n            }\n            return (+a) / (+b);\n        }, isFormula);\n        exec('*', args, function(a, b) {\n            if (a === \"\" || b === \"\") {\n                return new Error('#VALUE!');\n            }\n            return (+a) * (+b);\n        }, isFormula);\n        exec('+', args, function(a, b) {\n            if (a === \"\" || b === \"\") {\n                return new Error('#VALUE!');\n            }\n            if (a instanceof Date && typeof b === 'number') {\n                b = b * MS_PER_DAY;\n            }\n            return (+a) + (+b);\n        }, isFormula);\n        exec('&', args, function(a, b) {\n            return '' + a + b;\n        }, isFormula);\n        exec('<', args, function(a, b) {\n            return a < b;\n        }, isFormula);\n        exec('>', args, function(a, b) {\n            return a > b;\n        }, isFormula);\n        exec('>=', args, function(a, b) {\n            return a >= b;\n        }, isFormula);\n        exec('<=', args, function(a, b) {\n            return a <= b;\n        }, isFormula);\n        exec('<>', args, function(a, b) {\n            if (a instanceof Date && b instanceof Date) {\n                return a.getTime() !== b.getTime();\n            }\n            if (isEmpty(a) && isEmpty(b)) {\n                return false;\n            }\n            return a !== b;\n        }, isFormula);\n        exec('=', args, function(a, b) {\n            if (a instanceof Date && b instanceof Date) {\n                return a.getTime() === b.getTime();\n            }\n            if (isEmpty(a) && isEmpty(b)) {\n                return true;\n            }\n            if ((a == null && b === 0) || (a === 0 && b == null)) {\n                return true;\n            }\n            if (typeof a === 'string' && typeof b === 'string' && a.toLowerCase() === b.toLowerCase()) {\n                return true;\n            }\n            return a === b;\n        }, isFormula);\n        if (args.length == 1) {\n            if (typeof(args[0].calc) !== 'function') {\n                return args[0];\n            }\n            else {\n                // console.log('formula.sheet_name: ' + formula.sheet_name + ', formula.name: ' + formula.name + ', formula.cell.f: ' + formula.cell.f + \"\\n\");\n                return args[0].calc();\n            }\n        }\n    };\n\n    var last_arg;\n    self.push = function(buffer) {\n        if (buffer) {\n            var v = str_2_val(buffer, formula);\n            if (((v === '=') && (last_arg == '>' || last_arg == '<')) || (last_arg == '<' && v === '>')) {\n                self.args[self.args.length - 1] += v;\n            }\n            else {\n                self.args.push(v);\n            }\n            last_arg = v;\n            //console.log(self.id, '-->', v);\n        }\n    };\n};","\"use strict\";\n\nmodule.exports = function LazyValue(fn) {\n    this.calc = function() {\n        return fn();\n    };\n};\n","\"use strict\";\n\nmodule.exports = function UserFnExecutor(user_function) {\n    var self = this;\n    self.name = 'UserFn';\n    self.args = [];\n\n    self.row = function() {\n        const args = self.args.map(f => f.args[0]);\n        if (args.length > 1) {\n            return new Error('#N/A');\n        }\n        if (args.length === 0 || args[0] == undefined) {\n            return parseInt(self.args[0].formula.name.replace(/[^0-9]/g, ''));\n        }\n    \n        if (args[0].name !== 'RefValue' && args[0].name !== 'Range') {\n            return new Error('#VALUE!');\n        }\n    \n        if (args[0].name === 'RefValue') {\n            const { row_num } = args[0].parseRef();\n            return row_num;\n        }\n    \n        if (args[0].name === 'Range') {\n            const { min_row, max_row } = args[0].parseRange();\n    \n            const result = []\n            for (let i = min_row; i < max_row + 1; i++) {\n                result.push([i]);\n            }\n    \n            return result;\n        }\n    \n        return new Error('#N/A');\n    }\n\n    self.calc = function() {\n        var errorValues = {\n            '#NULL!': 0x00,\n            '#DIV/0!': 0x07,\n            '#VALUE!': 0x0F,\n            '#REF!': 0x17,\n            '#NAME?': 0x1D,\n            '#NUM!': 0x24,\n            '#N/A': 0x2A,\n            '#GETTING_DATA': 0x2B\n        }, result;\n        try {\n            if (user_function.name === 'ROW') {\n                result = self.row();\n            } else {\n                result = user_function.apply(self, self.args.map(f => f.calc(user_function.name === \"FILTER\")));\n            }\n\n            if ((user_function.name === \"FILTER\" || user_function.name === \"ROW\") && Array.isArray(result) && result.length > 0 && Array.isArray(result[0]) && result[0].length > 0) {\n                result = result[0][0];\n            }\n        } catch (e) {\n            if (user_function.name === 'is_blank'\n                && errorValues[e.message] !== undefined) {\n                // is_blank applied to an error cell doesn't propagate the error\n                result = 0;\n            }\n            else if (user_function.name === 'iserror'\n                && errorValues[e.message] !== undefined) {\n                // iserror applied to an error doesn't propagate the error and returns true\n                result = true;\n            }\n            else {\n                throw e;\n            }\n        }\n        return result;\n    };\n    self.push = function(buffer) {\n        self.args.push(buffer);\n    };\n};","\"use strict\";\n\nmodule.exports = function UserRawFnExecutor(user_function, formula) {\n    var self = this;\n    self.name = 'UserRawFn';\n    self.args = [];\n    self.calc = function() {\n        try {\n            return user_function.apply(self, self.args);\n        } catch(e) {\n            // debug\n            // console.log('----------------', user_function);\n            // console.log(formula.name);\n            // console.log(self);\n            throw e;\n        }\n    };\n    self.push = function(buffer) {\n        self.args.push(buffer);\n    };\n};\n","\"use strict\";\nconst utils = require('./utils')\nconst error = require('./errors')\n\n// +---------------------+\n// | FORMULAS REGISTERED |\n// +---------------------+\nlet formulas = {\n    'FLOOR': Math.floor,\n    '_xlfn.FLOOR.MATH': Math.floor,\n    'FLOOR.MATH': Math.floor,\n    'ABS': Math.abs,\n    'SQRT': Math.sqrt,\n    'VLOOKUP': vlookup,\n    'MAX': max,\n    'SUM': sum,\n    'MIN': min,\n    'CONCATENATE': concatenate,\n    'PMT': pmt,\n    'COUNTA': counta,\n    'IRR': irr,\n    'NORM.INV': normsInv,\n    '_xlfn.NORM.INV': normsInv,\n    'STDEV': stDeviation,\n    'AVERAGE': avg,\n    'EXP': EXP,\n    'LN': Math.log,\n    '_xlfn.VAR.P': var_p,\n    'VAR.P': var_p,\n    '_xlfn.COVARIANCE.P': covariance_p,\n    'COVARIANCE.P': covariance_p,\n    'TRIM': trim,\n    'LEN': len,\n    'ISBLANK': is_blank,\n    'HLOOKUP': hlookup,\n    'INDEX': index,\n    'MATCH': match,\n    'SUMPRODUCT': sumproduct,\n    'ISNUMBER': isnumber,\n    'TODAY': today,\n    'ISERROR': iserror,\n    'TIME': time,\n    'DAY': day,\n    'MONTH': month,\n    'YEAR': year,\n    'RIGHT': right,\n    'LEFT': left,\n    'IFS': ifs,\n    'ROUND': round,\n    'CORREL': correl, // missing test\n    'SUMIF': sumif, // missing test,\n    'CHOOSE': choose,\n    'SUBSTITUTE': substitute,\n    'CEILING': ceiling,\n    'FILTER': throwErrors(FILTER),\n};\n\nfunction choose(option) {\n    return arguments[option];\n}\n\nfunction sumif(){\n\n    let elementToSum = arguments[1];\n    let sumResult = 0;\n\n    [].slice.call(arguments)[0][0].forEach((elt,key) =>{\n        \n        if (elt!==null){\n            //if the element is not a string but a number, number has no replace function, so converting to string.\n            elt = elt.toString();\n            if( elt.replace(/\\'/g, \"\") === elementToSum){\n                if (!isNaN([].slice.call(arguments)[2][0][key])){\n                    sumResult += [].slice.call(arguments)[2][0][key]\n                }\n            }\n        }\n    });\n    return sumResult\n}\n\nfunction correl(a,b){\n\n    a = getArrayOfNumbers(a);\n    b = getArrayOfNumbers(b);\n\n    if (a.length !== b.length) {\n        return 'N/D';\n    }\n    var inv_n = 1.0 / (a.length-1);\n    var avg_a = sum.apply(this, a) / a.length;\n    var avg_b = sum.apply(this, b) / b.length;\n    var s = 0.0;\n    var sa = 0;\n    var sb=0;\n    for (var i = 0; i < a.length; i++) {\n        s += (a[i] - avg_a) * (b[i] - avg_b);\n\n        sa+=Math.pow(a[i],2);\n        sb+=Math.pow(b[i],2);\n    }\n\n    sa=Math.sqrt(sa/inv_n);\n    sb=Math.sqrt(sb/inv_n);\n\n    return s / (inv_n*sa*sb);\n}\n\nfunction round(value, decimalPlaces) {\n    if (arguments.length === 0) throw new Error(\"Err:511\");\n    if (arguments.length === 1) return Math.round(value);\n    let roundMeasure = Math.pow(10, decimalPlaces);\n    return Math.round(roundMeasure*value)/roundMeasure\n}\n\nfunction today() {\n    var today = new Date();\n    today.setHours(0, 0, 0, 0);\n    return today;\n}\n\nfunction isnumber(x) {\n    return !isNaN(x);\n}\n\nfunction sumproduct() {\n    var parseNumber = function (string) {\n        if (string === undefined || string === '' || string === null) {\n            return 0;\n        }\n        if (!isNaN(string)) {\n            return parseFloat(string);\n        }\n        return 0;\n    },\n    consistentSizeRanges = function (matrixArray) {\n        var getRowCount = function(matrix) {\n                return matrix.length;\n            },\n            getColCount = function(matrix) {\n                return matrix[0].length;\n            },\n            rowCount = getRowCount(matrixArray[0]),\n            colCount = getColCount(matrixArray[0]);\n\n        for (var i = 1; i < matrixArray.length; i++) {\n            if (getRowCount(matrixArray[i]) !== rowCount\n                || getColCount(matrixArray[i]) !== colCount) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    if (!arguments || arguments.length === 0) {\n        throw Error('#VALUE!');\n    }\n    if (!consistentSizeRanges(arguments)) {\n        throw Error('#VALUE!');\n    }\n    // throw error if any of the cells passed in arguments is in error\n    for (var i = 0; i < arguments.length; i++) {\n        var row = arguments[i];\n        if (Array.isArray(row)) {\n            for (var j = 0; j < row.length; j++) {\n                var col = row[j];\n                if (Array.isArray(col)) {\n                    for (var k = 0; k < col.length; k++) {\n                        var cell = col[k];\n                        if (cell && typeof cell === 'object' && cell.t === 'e') {\n                            throw Error(cell.w);\n                        }\n                    }\n                }\n                else {\n                    var cell = col;\n                    if (cell && typeof cell === 'object' && cell.t === 'e') {\n                        throw Error(cell.w);\n                    }\n                }\n            }\n        }\n        else {\n            var cell = row;\n            if (cell && typeof cell === 'object' && cell.t === 'e') {\n                throw Error(cell.w);\n            }\n        }\n    }\n\n    var arrays = arguments.length + 1;\n    var result = 0;\n    var product;\n    var k;\n    var _i;\n    var _ij;\n    for (var i = 0; i < arguments[0].length; i++) {\n        if (!(arguments[0][i] instanceof Array)) {\n            product = 1;\n            for (k = 1; k < arrays; k++) {\n                _i = parseNumber(arguments[k - 1][i]);\n\n                product *= _i;\n            }\n            result += product;\n        } else {\n            for (var j = 0; j < arguments[0][i].length; j++) {\n                product = 1;\n                for (k = 1; k < arrays; k++) {\n                    _ij = parseNumber(arguments[k - 1][i][j]);\n\n                    product *= _ij;\n                }\n                result += product;\n            }\n        }\n    }\n    return result;\n}\n\nfunction match_less_than_or_equal(matrix, lookupValue) {\n    var index;\n    var indexValue;\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (matrix[idx] === lookupValue) {\n            return idx + 1;\n        } else if (matrix[idx] < lookupValue) {\n            if (!indexValue) {\n                index = idx + 1;\n                indexValue = matrix[idx];\n            } else if (matrix[idx] > indexValue) {\n                index = idx + 1;\n                indexValue = matrix[idx];\n            }\n        }\n    }\n    if (!index) {\n        throw Error('#N/A');\n    }\n    return index;\n}\n\nfunction match_exactly_string(matrix, lookupValue) {\n    for (var idx = 0; idx < matrix.length; idx++) {\n        lookupValue = lookupValue.replace(/\\?/g, '.');\n        if (Array.isArray(matrix[idx])) {\n            if (matrix[idx].length === 1\n                && typeof matrix[idx][0] === 'string') {\n                    if (matrix[idx][0].toLowerCase() === lookupValue.toLowerCase()) {\n                        return idx + 1;\n                    }\n                }\n        } else if (typeof matrix[idx] === 'string') {\n            if (matrix[idx].toLowerCase() === lookupValue.toLowerCase()) {\n                return idx + 1;\n            }\n        }\n\n    }\n    throw Error('#N/A');\n}\n\nfunction match_exactly_non_string(matrix, lookupValue) {\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (Array.isArray(matrix[idx])) {\n            if (matrix[idx].length === 1) {\n                if (matrix[idx][0] === lookupValue) {\n                    return idx + 1;\n                }\n            }\n        } else if (matrix[idx] === lookupValue) {\n            return idx + 1;\n        }\n    }\n    throw Error('#N/A');\n}\n\n// +---------------------+\n// | THE IMPLEMENTATIONS |\n// +---------------------+\n\n\nfunction match_greater_than_or_equal(matrix, lookupValue) {\n    var index;\n    var indexValue;\n    for (var idx = 0; idx < matrix.length; idx++) {\n        if (Array.isArray(matrix[idx]) && matrix[idx].length > 0) {\n            // For array in column\n            if (matrix[idx][0] === lookupValue) {\n                return idx + 1;\n            } else if (matrix[idx][0] > lookupValue) {\n                if (!indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx][0];\n                } else if (matrix[idx][0] < indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx][0];\n                }\n            }\n        } else {\n            // For array in row\n            if (matrix[idx] === lookupValue) {\n                return idx + 1;\n            } else if (matrix[idx] > lookupValue) {\n                if (!indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx];\n                } else if (matrix[idx] < indexValue) {\n                    index = idx + 1;\n                    indexValue = matrix[idx];\n                }\n            }\n        }\n    }\n    if (!index) {\n        throw Error('#N/A');\n    }\n    return index;\n}\n\nfunction match(lookupValue, matrix, matchType) {\n    if (Array.isArray(matrix)\n        && matrix.length === 1\n        && Array.isArray(matrix[0])) {\n        matrix = matrix[0];\n    }\n    if (!lookupValue && !matrix) {\n        throw Error('#N/A');\n    }\n    if (arguments.length === 2) {\n        matchType = 1;\n    }\n    if (!(matrix instanceof Array)) {\n        throw Error('#N/A');\n    }\n    if (matchType === 0) {\n        if (typeof lookupValue === 'string') {\n            return match_exactly_string(matrix, lookupValue);\n        } else {\n            return match_exactly_non_string(matrix, lookupValue);\n        }\n    } else if (matchType === 1) {\n        return match_less_than_or_equal(matrix, lookupValue);\n    } else if (matchType === -1) {\n        return match_greater_than_or_equal(matrix, lookupValue);\n    } else {\n        throw Error('#N/A');\n    }\n}\n\nfunction index(matrix, row_num, column_num) {\n    if (row_num <= matrix.length) {\n        var row = matrix[row_num - 1];\n        if (Array.isArray(row)) {\n            if (!column_num) {\n                return row;\n            } else if (column_num <= row.length) {\n                return row[column_num - 1];\n            }\n        } else {\n            return matrix[row_num];\n        }\n    }\n    throw Error('#REF!');\n}\n\n// impl ported from https://github.com/FormulaPages/hlookup\nfunction hlookup(needle, table, index, exactmatch) {\n    if (typeof needle === \"undefined\" || (0, is_blank)(needle)) {\n        throw Error('#N/A');\n    }\n\n    index = index || 0;\n    let row = table[0], i, searchingFor;\n\n    if (typeof needle === 'string') {\n        searchingFor = needle.toLowerCase();\n        for (i = 0; i < row.length; i++) {\n            if (exactmatch && row[i] === searchingFor || row[i].toLowerCase().indexOf(searchingFor) !== -1) {\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n            }\n        }\n    } else {\n        searchingFor = needle;\n        for (i = 0; i < row.length; i++) {\n            if (exactmatch && row[i] === searchingFor || row[i] === searchingFor) {\n                return index < table.length + 1 ? table[index - 1][i] : table[0][i];\n            }\n        }\n    }\n    throw Error('#N/A');\n}\n\nfunction len(a) {\n    return ('' + a).length;\n}\n\nfunction trim(a) {\n    return ('' + a).trim();\n}\n\nfunction is_blank(a) {\n    // console.log(a)\n    return !a;\n}\n\nfunction covariance_p(a, b) {\n    a = getArrayOfNumbers(a);\n    b = getArrayOfNumbers(b);\n    if (a.length != b.length) {\n        return 'N/D';\n    }\n    var inv_n = 1.0 / a.length;\n    var avg_a = sum.apply(this, a) / a.length;\n    var avg_b = sum.apply(this, b) / b.length;\n    var s = 0.0;\n    for (var i = 0; i < a.length; i++) {\n        s += (a[i] - avg_a) * (b[i] - avg_b);\n    }\n    return s * inv_n;\n}\n\nfunction getArrayOfNumbers(range) {\n    var arr = [];\n    for (var i = 0; i < range.length; i++) {\n        var arg = range[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                if (typeof(matrix[j]) == 'number') {\n                    arr.push(matrix[j]);\n                }\n                else if (Array.isArray(matrix[j])) {\n                    for (var k = matrix[j].length; k--;) {\n                        if (typeof(matrix[j][k]) == 'number') {\n                            arr.push(matrix[j][k]);\n                        }\n                    }\n                }\n                // else {\n                //   wtf is that?\n                // }\n            }\n        }\n        else {\n            if (typeof(arg) == 'number') {\n                arr.push(arg);\n            }\n        }\n    }\n    return arr;\n}\n\nfunction var_p() {\n    var average = avg.apply(this, arguments);\n    var s = 0.0;\n    var c = 0;\n    for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n                        s += Math.pow(matrix[j][k] - average, 2);\n                        c++;\n                    }\n                }\n            }\n        }\n        else {\n            s += Math.pow(arg - average, 2);\n            c++;\n        }\n    }\n    return s / c;\n}\n\nfunction EXP(n) {\n    return Math.pow(Math.E, n);\n}\n\nfunction avg() {\n    var aux = counta.apply(this, arguments);\n    if (aux == 0) {\n        throw Error('#DIV/0!');\n    }\n    return sum.apply(this, arguments) / aux;\n}\n\nfunction stDeviation() {\n    var array = getArrayOfNumbers(arguments);\n\n    function _mean(array) {\n        return array.reduce(function(a, b) {\n            return a + b;\n        }) / array.length;\n    }\n    var mean = _mean(array),\n        dev = array.map(function(itm) {\n            return (itm - mean) * (itm - mean);\n        });\n    return Math.sqrt(dev.reduce(function(a, b) {\n        return a + b;\n    }) / (array.length - 1));\n}\n\n/// Original C++ implementation found at http://www.wilmott.com/messageview.cfm?catid=10&threadid=38771\n/// C# implementation found at http://weblogs.asp.net/esanchez/archive/2010/07/29/a-quick-and-dirty-implementation-of-excel-norminv-function-in-c.aspx\n/*\n *     Compute the quantile function for the normal distribution.\n *\n *     For small to moderate probabilities, algorithm referenced\n *     below is used to obtain an initial approximation which is\n *     polished with a final Newton step.\n *\n *     For very large arguments, an algorithm of Wichura is used.\n *\n *  REFERENCE\n *\n *     Beasley, J. D. and S. G. Springer (1977).\n *     Algorithm AS 111: The percentage points of the normal distribution,\n *     Applied Statistics, 26, 118-121.\n *\n *      Wichura, M.J. (1988).\n *      Algorithm AS 241: The Percentage Points of the Normal Distribution.\n *      Applied Statistics, 37, 477-484.\n */\nfunction normsInv(p, mu, sigma) {\n    if (p < 0 || p > 1) {\n        throw \"The probality p must be bigger than 0 and smaller than 1\";\n    }\n    if (sigma < 0) {\n        throw \"The standard deviation sigma must be positive\";\n    }\n\n    if (p == 0) {\n        return -Infinity;\n    }\n    if (p == 1) {\n        return Infinity;\n    }\n    if (sigma == 0) {\n        return mu;\n    }\n\n    var q, r, val;\n\n    q = p - 0.5;\n\n    /*-- use AS 241 --- */\n    /* double ppnd16_(double *p, long *ifault)*/\n    /*      ALGORITHM AS241  APPL. STATIST. (1988) VOL. 37, NO. 3\n            Produces the normal deviate Z corresponding to a given lower\n            tail area of P; Z is accurate to about 1 part in 10**16.\n    */\n    if (Math.abs(q) <= .425) { /* 0.075 <= p <= 0.925 */\n        r = .180625 - q * q;\n        val =\n            q * (((((((r * 2509.0809287301226727 +\n                            33430.575583588128105) * r + 67265.770927008700853) * r +\n                        45921.953931549871457) * r + 13731.693765509461125) * r +\n                    1971.5909503065514427) * r + 133.14166789178437745) * r +\n                3.387132872796366608) / (((((((r * 5226.495278852854561 +\n                        28729.085735721942674) * r + 39307.89580009271061) * r +\n                    21213.794301586595867) * r + 5394.1960214247511077) * r +\n                687.1870074920579083) * r + 42.313330701600911252) * r + 1);\n    }\n    else { /* closer than 0.075 from {0,1} boundary */\n\n        /* r = min(p, 1-p) < 0.075 */\n        if (q > 0)\n            r = 1 - p;\n        else\n            r = p;\n\n        r = Math.sqrt(-Math.log(r));\n        /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\n\n        if (r <= 5) { /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\n            r += -1.6;\n            val = (((((((r * 7.7454501427834140764e-4 +\n                                .0227238449892691845833) * r + .24178072517745061177) *\n                            r + 1.27045825245236838258) * r +\n                        3.64784832476320460504) * r + 5.7694972214606914055) *\n                    r + 4.6303378461565452959) * r +\n                1.42343711074968357734) / (((((((r *\n                                1.05075007164441684324e-9 + 5.475938084995344946e-4) *\n                            r + .0151986665636164571966) * r +\n                        .14810397642748007459) * r + .68976733498510000455) *\n                    r + 1.6763848301838038494) * r +\n                2.05319162663775882187) * r + 1);\n        }\n        else { /* very close to  0 or 1 */\n            r += -5;\n            val = (((((((r * 2.01033439929228813265e-7 +\n                                2.71155556874348757815e-5) * r +\n                            .0012426609473880784386) * r + .026532189526576123093) *\n                        r + .29656057182850489123) * r +\n                    1.7848265399172913358) * r + 5.4637849111641143699) *\n                r + 6.6579046435011037772) / (((((((r *\n                            2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\n                        r + 1.8463183175100546818e-5) * r +\n                    7.868691311456132591e-4) * r + .0148753612908506148525) * r + .13692988092273580531) * r +\n                .59983220655588793769) * r + 1);\n        }\n\n        if (q < 0.0) {\n            val = -val;\n        }\n    }\n\n    return mu + sigma * val;\n}\n\nfunction irr(range, guess) {\n    var min = -2.0;\n    var max = 1.0;\n    var n = 0;\n    do {\n        var guest = (min + max) / 2;\n        var NPV = 0;\n        for (var i = 0; i < range.length; i++) {\n            var arg = range[i];\n            NPV += arg[0] / Math.pow((1 + guest), i);\n        }\n        if (NPV > 0) {\n            if (min === max) {\n                max += Math.abs(guest);\n            }\n            min = guest;\n        }\n        else {\n            max = guest;\n        }\n        n++;\n    } while (Math.abs(NPV) > 0.000001 && n < 100000);\n    //console.log(n);\n    return guest;\n}\n\nfunction counta() {\n    var r = 0;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (matrix[j][k] !== null && matrix[j][k] !== undefined) {\n                        r++;\n                    }\n                }\n            }\n        }\n        else {\n            if (arg !== null && arg !== undefined) {\n                r++;\n            }\n        }\n    }\n    return r;\n}\n\nfunction pmt(rate_per_period, number_of_payments, present_value, future_value, type) {\n    type = type || 0;\n    future_value = future_value || 0;\n    if (rate_per_period != 0.0) {\n        // Interest rate exists\n        var q = Math.pow(1 + rate_per_period, number_of_payments);\n        return -(rate_per_period * (future_value + (q * present_value))) / ((-1 + q) * (1 + rate_per_period * (type)));\n\n    }\n    else if (number_of_payments != 0.0) {\n        // No interest rate, but number of payments exists\n        return -(future_value + present_value) / number_of_payments;\n    }\n    return 0;\n}\n\nfunction concatenate() {\n    var r = '';\n    for (var i = 0; i < arguments.length; i++) {\n        var arg = arguments[i];\n        if (arg === null || arg === undefined) continue;\n        r += arg;\n    }\n    return r;\n}\n\nfunction sum() {\n    var r = 0;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var matrix = arg;\n            for (var j = matrix.length; j--;) {\n                for (var k = matrix[j].length; k--;) {\n                    if (!isNaN(matrix[j][k])) {\n                        r += +matrix[j][k];\n                    }\n                }\n            }\n        }\n        else {\n            r += +arg;\n        }\n    }\n    return r;\n}\n\nfunction max() {\n    var max = null;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var arr = arg;\n            for (var j = arr.length; j--;) {\n                var col = arr[j];\n                if (Array.isArray(col)) {\n                    for (var k = col.length; k--;) {\n                        if (max == null || (col[k] != null && max < col[k])) {\n                            max = col[k];\n                        }\n                    }\n                }\n                else if (max == null || (col != null && max < col)) {\n                    max = col;\n                }\n            }\n        }\n        else if (!isNaN(arg) && (max == null || (arg != null && max < arg))) {\n            max = arg;\n        }\n    }\n    return max;\n}\n\nfunction min() {\n    var min = null;\n    for (var i = arguments.length; i--;) {\n        var arg = arguments[i];\n        if (Array.isArray(arg)) {\n            var arr = arg;\n            for (var j = arr.length; j--;) {\n                var col = arr[j];\n                if (Array.isArray(col)) {\n                    for (var k = col.length; k--;) {\n                        if (min == null || (col[k] != null && min > col[k])) {\n                            min = col[k];\n                        }\n                    }\n                }\n                else if (min == null || (col != null && min > col)) {\n                    min = col;\n                }\n            }\n        }\n        else if (!isNaN(arg) && (min == null || (arg != null && min > arg))) {\n            min = arg;\n        }\n    }\n    return min;\n}\n\nfunction vlookup(key, matrix, return_index, range_lookup=true) {\n    var val = null;\n    for (var i = 0; i < matrix.length; i++) {\n        if (matrix[i][0] < key) {\n            val = matrix[i][return_index - 1];\n        }\n        else if (matrix[i][0] == key) {\n            return matrix[i][return_index - 1];\n        }\n    }\n    if (range_lookup && val) {\n        return val;\n    }\n    throw Error('#N/A');\n}\n\nfunction iserror() {\n    // if an error is catched before getting there, true will be returned from the catch block\n    // if we get here then it's not an error\n    return false;\n}\n\nfunction time(hours, minutes, seconds) {\n    const MS_PER_DAY = 24 * 60 * 60 * 1000;\n    return ((hours * 60 + minutes) * 60 + seconds) * 1000 / MS_PER_DAY;\n}\n\nfunction day(date) {\n    if (!date.getDate) {\n        throw Error('#VALUE!');\n    }\n    var day = date.getDate();\n    if (isNaN(day)) {\n        throw Error('#VALUE!');\n    }\n    return day;\n}\n\nfunction month(date) {\n    if (!date.getMonth) {\n        throw Error('#VALUE!');\n    }\n    var month = date.getMonth();\n    if (isNaN(month)) {\n        throw Error('#VALUE!');\n    }\n    return month + 1;\n}\n\nfunction year(date) {\n    if (!date.getFullYear) {\n        throw Error('#VALUE!');\n    }\n    var year = date.getFullYear();\n    if (isNaN(year)) {\n        throw Error('#VALUE!');\n    }\n    return year;\n}\n\nfunction right(text, number) {\n    number = (number === undefined) ? 1 : parseFloat(number);\n\n    if (isNaN(number)) {\n        throw Error('#VALUE!');\n    }\n    if (text === undefined || text === null) {\n        text = '';\n    } else {\n        text = '' + text;\n    }\n    return text.substring(text.length - number);\n}\n\nfunction left(text, number) {\n    number = (number === undefined) ? 1 : parseFloat(number);\n\n    if (isNaN(number)) {\n        throw Error('#VALUE!');\n    }\n    if (text === undefined || text === null) {\n        text = '';\n    } else {\n        text = '' + text;\n    }\n    return text.substring(0, number);\n}\n\nfunction ifs(/*_cond1, _val1, _cond2, _val2, _cond3, _val3, ... */) {\n    for (var i = 0; i + 1 < arguments.length; i+=2) {\n        var cond = arguments[i];\n        var val = arguments[i+1];\n        if (cond) {\n            return val;\n        }\n    }\n    throw Error('#N/A');\n}\n\nfunction escapeRegExp(str) {\n    return str.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, \"\\\\$1\");\n}\n\nfunction substitute(text, old_text, new_text, occurrence) {\n    if(occurrence <= 0) {\n      throw Error('#VALUE!');\n    }\n    if (!text || !old_text || (!new_text && new_text !== '')) {\n      return text;\n    } else if (occurrence === undefined) {\n      return text.replace(new RegExp(escapeRegExp(old_text), 'g'), new_text);\n    } else {\n      var index = 0;\n      var i = 0;\n      while (text.indexOf(old_text, index) > 0) {\n        index = text.indexOf(old_text, index + 1);\n        i++;\n        if (i === occurrence) {\n          return text.substring(0, index) + new_text + text.substring(index + old_text.length);\n        }\n      }\n    }\n  };\n\nfunction ceiling(number, significance) {\n    return Math.ceil(number / significance) * significance\n}\n/**\n * Filters an array based on a Boolean (True/False) array.\n *\n * Category: Lookup and reference\n *\n * @param {*} array The array, or range to filter. E.g. [[1,2,3],[4,5,6]]\n * @param {*} include A boolean array whose height or width is the same as the array. E.g. [[true, false, true]] OR [[true],[false]]\n * @param {*} if_empty Optional. The value to return if all values in the included array are empty (filter returns nothing). E.g. \"No results\"\n * @returns\n */\n function FILTER(array, include, if_empty) {\n    // correct types\n    if (!array || !include) {\n        return error.na\n    }\n\n    if (!(array instanceof Array)) {\n        return error.na\n    }\n\n    if (!(include instanceof Array)) {\n        return error.na\n    }\n\n    // array lengths must be greater than 0 and symmetrical\n    if (array.length === 0) {\n        return error.na\n    }\n\n    if (include.length === 0) {\n        return error.na\n    }\n\n    for (let i = 0; i < array.length; i++) {\n        if (!(array[i] instanceof Array)) {\n            return error.na\n        }\n\n        if (array[i].length === 0) {\n            return error.na\n        }\n\n        if (array[i].length !== array[0].length) {\n            return error.na\n        }\n    }\n\n    for (let i = 0; i < include.length; i++) {\n        if (!(include[i] instanceof Array)) {\n            return error.na\n        }\n\n        if (include[i].length === 0) {\n            return error.na\n        }\n\n        if (include[i].length !== include[0].length) {\n            return error.na\n        }\n    }\n\n    const arrayWidth = array[0].length\n    const arrayHeight = array.length\n    const includeWidth = include[0].length\n    const includeHeight = include.length\n\n    // include array must have same width or height as array (and generally not both)\n    if (arrayWidth !== includeWidth && arrayHeight !== includeHeight) {\n        return error.na\n    }\n\n    if (\n        arrayHeight > 1 &&\n        arrayWidth > 1 &&\n        ((arrayWidth === includeWidth && includeHeight !== 1) || (arrayHeight === includeHeight && includeWidth !== 1))\n    ) {\n        return error.na\n    }\n\n    if (\n        arrayHeight > 1 &&\n        arrayWidth === 1 &&\n        (includeWidth !== 1 || (includeHeight !== 1 && includeHeight !== arrayHeight))\n    ) {\n        return error.na\n    }\n\n    // filter\n    const result = []\n    for (let i = 0; i < arrayHeight; i++) {\n        const row = []\n        for (let j = 0; j < arrayWidth; j++) {\n            const value = getMatrixValueForFilter(include, i, j) || getMatrixValueForFilter(include, 0, j) || getMatrixValueForFilter(include, i, 0)\n            const bool = utils.parseBool(value)\n            if (bool === true) row.push(array[i][j])\n            else if (bool instanceof Error) return utils.addEmptyValuesToArray([[bool]], arrayWidth, arrayHeight)\n        }\n        if (row.length > 0) result.push(row)\n    }\n\n    if (result.length === 0) {\n        if (if_empty != null) {\n            return utils.addEmptyValuesToArray([[if_empty]], arrayWidth, arrayHeight)\n        }\n\n        return utils.addEmptyValuesToArray([[error.calc]], arrayWidth, arrayHeight)\n    }\n\n    return utils.addEmptyValuesToArray(result, arrayWidth, arrayHeight)\n}\n\nfunction getMatrixValueForFilter(matrix, i, j) {\n    if (matrix[i]) {\n        if (matrix[i][j] === false) {\n            return 'FALSE'\n        }\n        return matrix[i][j]\n    }\n}\n\nfunction throwErrors(someFormula) {\n    return function() {\n        const result = someFormula.apply(this, arguments);\n        if (result instanceof Error) {\n            throw result;\n        }\n        return result;\n    }\n}\n\nmodule.exports = formulas;\n","const error = require('./errors')\n\nfunction parseBool(bool) {\n    if (typeof bool === 'boolean') {\n        return bool\n    }\n\n    if (bool instanceof Error) {\n        return bool\n    }\n\n    if (typeof bool === 'number') {\n        return bool !== 0\n    }\n\n    if (typeof bool === 'string') {\n        const up = bool.toUpperCase()\n\n        if (up === 'TRUE') {\n            return true\n        }\n\n        if (up === 'FALSE') {\n            return false\n        }\n    }\n\n    if (bool instanceof Date && !isNaN(bool)) {\n        return true\n    }\n\n    return error.value\n}\n\n// E.g. addEmptyValuesToArray([[1]], 2, 2) => [[1, \"\"], [\"\", \"\"]]\nfunction addEmptyValuesToArray(array, requiredLength, requiredHeight) {\n    if (!array || !requiredLength || !requiredHeight) {\n        return array\n    }\n\n    if (requiredLength < 0 || requiredHeight < 0) {\n        return array\n    }\n\n    // array must be a square matrix\n    if (!Array.isArray(array) || !array.length) return array;\n    for (let i = 0; i < array.length; i++) {\n        if (!(array[i] instanceof Array)) return array\n    }\n\n    // add empty values to columns\n    for (let i = 0; i < array.length; i++) {\n        if (array[i].length < requiredLength) {\n            for (let j = array[i].length; j < requiredLength; j++) {\n                array[i].push('')\n            }\n        }\n    }\n\n    // add empty values to rows\n    if (array.length < requiredHeight) {\n        for (let i = array.length; i < requiredHeight; i++) {\n            array.push([])\n            for (let j = 0; j < requiredLength; j++) {\n                array[i].push('')\n            }\n        }\n    }\n\n    return array\n}\n\nmodule.exports = {\n    addEmptyValuesToArray,\n    parseBool,\n}","\"use strict\";\n\nconst int_2_col_str = require('./int_2_col_str.js');\nconst col_str_2_int = require('./col_str_2_int.js');\nconst RawValue = require('./RawValue.js');\nconst Range = require('./Range.js');\nconst RefValue = require('./RefValue.js');\n\nfunction raw_offset(cell_ref, rows, columns, height, width) {\n    height = (height || new RawValue(1)).calc();\n    width = (width || new RawValue(1)).calc();\n    if (cell_ref.args.length === 1 && cell_ref.args[0].name === 'RefValue') {\n        var ref_value = cell_ref.args[0];\n        var parsed_ref = ref_value.parseRef();\n        var col = col_str_2_int(parsed_ref.cell_name) + columns.calc();\n        var col_str = int_2_col_str(col);\n        var row = +parsed_ref.cell_name.replace(/^[A-Z]+/g, '') + rows.calc();\n        var cell_name = parsed_ref.sheet_name + '!' + col_str + row;\n        if (height === 1 && width === 1) {\n            return new RefValue(cell_name, ref_value.formula).calc();\n        }\n        else {\n            var end_range_col = int_2_col_str(col + width - 1);\n            var end_range_row = row + height - 1;\n            var end_range = end_range_col + end_range_row;\n            var str_expression = cell_name + ':' + end_range;\n            return new Range(str_expression, ref_value.formula).calc();\n        }\n    }\n}\n\n// function iferror(cell_ref, onerrorvalue) {\n//     try {\n//         var value = cell_ref.calc();\n//         if (typeof value === 'number' && (isNaN(value) || value === Infinity || value === -Infinity)) {\n//             return onerrorvalue.calc();\n//         }\n//         return value;\n//     } catch(e) {\n//         return onerrorvalue.calc();\n//     }\n// }\n\n// function _if(condition, _then, _else) {\n//     if (condition.calc()) {\n//         // console.log(condition.formula.name)\n//         // if (condition.formula.name === 'P40') {\n//         //     console.log('P40 =', _then.calc());\n//         //     console.log(' -->', _then.args[1].calc());\n//         // }\n//         return _then.calc();\n//     }\n//     else {\n//         if (typeof _else === 'undefined') {\n//             return false;\n//         } else {\n//             return _else.calc();\n//         }\n//     }\n// }\n\n// function and() {\n//     for (var i = 0; i < arguments.length; i++) {\n//         if(!arguments[i].calc()) return false;\n//     }\n//     return true;\n// }\n\n// function _or() {\n//     for (var i = 0; i < arguments.length; i++) {\n//         if(arguments[i].calc()) return true;\n//     }\n//     return false;\n// }\n\n// function transpose(expressionWithRange) {\n//     let range = expressionWithRange.args[0];\n//     // console.log(expressionWithRange.args[0])\n//     // console.log(expressionWithRange.formula.wb.Sheets.Sheet1)\n//     // console.log(range.calc())\n//     let matrix = range.calc();\n//     let cellName = expressionWithRange.formula.name;\n//     let colRow = cellName.match(/([A-Z]+)([0-9]+)/);\n//     let sheet = expressionWithRange.formula.sheet;\n//     // console.log(colRow[1], colRow[2]);\n//     // console.log(col_str_2_int(colRow[1]));\n//     let colNumber = col_str_2_int(colRow[1]);\n//     let rowNumber = +colRow[2];\n//     for (let i = 0; i < matrix.length; i++) {\n//         let matrixRow = matrix[i];\n//         for (let j = 0; j < matrixRow.length; j++) {\n//             let destinationColumn = colNumber + i;\n//             let destinationRow = rowNumber + j;\n//             let value = matrixRow[j];\n//             // console.log(int_2_col_str(destinationColumn), destinationRow, value);\n//             sheet[int_2_col_str(destinationColumn) + destinationRow].v = value;\n//         }\n//     }\n//     // console.log(expressionWithRange.formula.name)\n//     return matrix[0][0];\n// }\n\nmodule.exports = {\n    'OFFSET': raw_offset,\n    // 'IFERROR': iferror,\n    // 'IF': _if,\n    // 'AND': and,\n    // 'OR': _or\n//     'TRANSPOSE': transpose\n};\n","\"use strict\";\n\nconst RawValue = require('./RawValue.js');\nconst str_2_val = require('./str_2_val.js');\nconst find_all_cells_with_formulas = require('./find_all_cells_with_formulas.js');\n\nclass Calculator {\n    \n    constructor(workbook, exec_formula) {\n        this.workbook = workbook;\n        this.expressions = [];\n        this.exec_formula = exec_formula;\n        this.variables = {};\n        this.formulas = find_all_cells_with_formulas(workbook, exec_formula);\n        for (let i = this.formulas.length - 1; i >= 0; i--) {\n            let exp = exec_formula.build_expression(this.formulas[i]);\n            this.expressions.push(exp);\n        }\n        this.calcNames();\n    }\n    \n    setVar(var_name, value) {\n        let variable = this.variables[var_name];\n        if (variable) {\n            variable.setValue(value);\n        } else {\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, var_name, value);\n            });\n        }\n    }\n    \n    getVars() {\n        let vars = {};\n        for (let k in this.variables) {\n            vars[k] = this.variables[k].calc();\n        }\n        return vars;\n    }\n    \n    calcNames() {\n        if (!this.workbook || !this.workbook.Workbook || !this.workbook.Workbook.Names) {\n            return;\n        }\n        this.workbook.Workbook.Names.forEach(item => {\n            let val = this.getRef(item.Ref);\n            this.variables[item.Name] = val;\n            this.expressions.forEach(exp => {\n                this.setVarOfExpression(exp, item.Name);\n            });\n        });\n    }\n    \n    getRef(ref_name) {\n        if (!this.formulas.length) {\n            throw new Error(\"No formula found.\");\n        }\n        let first_formula = this.formulas[0];\n        let formula_ref = first_formula.formula_ref;\n        let formula = {\n            formula_ref: formula_ref,\n            wb: this.workbook,\n            exec_formula: this.exec_formula\n        };\n        return str_2_val(ref_name, formula);\n    }\n    \n    setVarOfExpression(exp, var_name, value) {\n        for (let i = 0; i < exp.args.length; i++) {\n            let arg = exp.args[i];\n            if (arg === var_name) {\n                exp.args[i] = this.variables[var_name] || (this.variables[var_name] = new RawValue(value));\n            } else if (typeof arg === 'object' && (arg.name === 'Expression' || arg.name === 'UserFn')) {\n                this.setVarOfExpression(arg, var_name, value);\n            }\n        }\n    }\n    \n    execute() {\n        this.expressions.forEach(exp => {\n            exp.update_cell_value();\n        });\n    }\n}\n\nmodule.exports = Calculator;"],"sourceRoot":""}